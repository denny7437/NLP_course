#!/usr/bin/env python3
"""
–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –¥–µ—Ç–µ–∫—Ç–æ—Ä –æ—Å–∫–æ—Ä–±–ª–µ–Ω–∏—è —á—É–≤—Å—Ç–≤ –≤–µ—Ä—É—é—â–∏—Ö
"""

import sys
import os
sys.path.append('.')
from test_religious_detector import ReligiousContentTester
import logging

# –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –ª–æ–≥–∏
logging.basicConfig(level=logging.WARNING)

def main():
    print("\nüî• –ò–ù–¢–ï–†–ê–ö–¢–ò–í–ù–´–ô –î–ï–¢–ï–ö–¢–û–† –†–ï–õ–ò–ì–ò–û–ó–ù–û–ì–û –ö–û–ù–¢–ï–ù–¢–ê üî•")
    print("üìã –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç—ã –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç –æ—Å–∫–æ—Ä–±–ª–µ–Ω–∏—è —á—É–≤—Å—Ç–≤ –≤–µ—Ä—É—é—â–∏—Ö")
    print("ü§ñ Powered by ModernBERT")
    print("="*60)
    
    detector = ReligiousContentTester()
    print("üìö –ó–∞–≥—Ä—É–∂–∞—é –º–æ–¥–µ–ª—å (—ç—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –≤—Ä–µ–º—è)...")
    detector.initialize_model()
    print("‚úÖ –ú–æ–¥–µ–ª—å –≥–æ—Ç–æ–≤–∞!")
    
    print("\nüìù –ò–ù–°–¢–†–£–ö–¶–ò–Ø:")
    print("‚Ä¢ –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞")
    print("‚Ä¢ –í–≤–µ–¥–∏—Ç–µ 'exit' –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è")
    print("‚Ä¢ –í–≤–µ–¥–∏—Ç–µ 'examples' –¥–ª—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø—Ä–∏–º–µ—Ä–æ–≤")
    print("-"*60)
    
    examples = [
        "–ú–æ–ª–∏—Ç–≤–∞ –ø–æ–º–æ–≥–∞–µ—Ç –Ω–∞–π—Ç–∏ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –ø–æ–∫–æ–π",
        "–í—Å–µ –≤–µ—Ä—É—é—â–∏–µ - –¥—É—Ä–∞–∫–∏ –∏ —Ñ–∞–Ω–∞—Ç–∏–∫–∏", 
        "–†–∞–∑–ª–∏—á–Ω—ã–µ —Ä–µ–ª–∏–≥–∏–∏ –∏–º–µ—é—Ç –ø—Ä–∞–≤–æ –Ω–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ",
        "–¶–µ—Ä–∫–æ–≤—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Å–æ–∂–∂–µ–Ω–∞ –¥–æ—Ç–ª–∞",
        "–î—É—Ö–æ–≤–Ω—ã–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ –ø–æ–ª–µ–∑–Ω—ã –¥–ª—è –∑–¥–æ—Ä–æ–≤—å—è",
        "–†–µ–ª–∏–≥–∏–æ–∑–Ω—ã–µ –∫–Ω–∏–≥–∏ - —Å–ø–ª–æ—à–Ω–∞—è –ª–æ–∂—å"
    ]
    
    while True:
        try:
            text = input("\nüîç –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç: ").strip()
            
            if text.lower() in ['exit', 'quit', '–≤—ã—Ö–æ–¥']:
                print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
                break
                
            if text.lower() in ['examples', '–ø—Ä–∏–º–µ—Ä—ã']:
                print("\nüß™ –¢–µ—Å—Ç–∏—Ä—É—é –Ω–∞ –ø—Ä–∏–º–µ—Ä–∞—Ö:")
                for i, example in enumerate(examples, 1):
                    print(f"\n{i}. –¢–µ–∫—Å—Ç: {example}")
                    predictions, probabilities = detector.predict([example])
                    pred = predictions[0]
                    prob = probabilities[0]
                    
                    safe_prob = prob[0] * 100
                    dangerous_prob = prob[1] * 100
                    
                    if pred == 1:
                        print("   üö® –û–ü–ê–°–ù–´–ô –ö–û–ù–¢–ï–ù–¢")
                    else:
                        print("   ‚úÖ –ë–ï–ó–û–ü–ê–°–ù–´–ô –ö–û–ù–¢–ï–ù–¢")
                    print(f"   –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π: {safe_prob:.1f}% | –û–ø–∞—Å–Ω—ã–π: {dangerous_prob:.1f}%")
                continue
                
            if not text:
                print("‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ –Ω–µ–ø—É—Å—Ç–æ–π —Ç–µ–∫—Å—Ç")
                continue
                
            # –ê–Ω–∞–ª–∏–∑ –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
            predictions, probabilities = detector.predict([text])
            pred = predictions[0]
            prob = probabilities[0]
            
            safe_prob = prob[0] * 100
            dangerous_prob = prob[1] * 100
            confidence = max(prob) * 100
            
            print("\n" + "="*50)
            if pred == 1:
                print("üö® –û–ü–ê–°–ù–´–ô –ö–û–ù–¢–ï–ù–¢")
                print("   –ú–æ–∂–µ—Ç –æ—Å–∫–æ—Ä–±–ª—è—Ç—å —á—É–≤—Å—Ç–≤–∞ –≤–µ—Ä—É—é—â–∏—Ö")
            else:
                print("‚úÖ –ë–ï–ó–û–ü–ê–°–ù–´–ô –ö–û–ù–¢–ï–ù–¢")
                print("   –ù–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –æ—Å–∫–æ—Ä–±–ª–µ–Ω–∏–π")
                
            print(f"\nüìä –î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
            print(f"   –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π:  {safe_prob:5.1f}% {'‚ñà' * int(safe_prob/5)}")
            print(f"   –û–ø–∞—Å–Ω—ã–π:     {dangerous_prob:5.1f}% {'‚ñà' * int(dangerous_prob/5)}")
            print(f"\nüéØ –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {confidence:.1f}%")
            
            if confidence >= 80:
                print("üí™ –í—ã—Å–æ–∫–∞—è —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ")
            elif confidence >= 60:
                print("ü§î –°—Ä–µ–¥–Ω—è—è —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å - —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–∫–∞")
            else:
                print("‚ö†Ô∏è –ù–∏–∑–∫–∞—è —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å - —Ç—Ä–µ–±—É–µ—Ç—Å—è —Ä—É—á–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞")
            
            print("="*50)
            
        except KeyboardInterrupt:
            print("\n\nüëã –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã...")
            break
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
            print("üîÑ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑")

if __name__ == "__main__":
    main() 